% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/threshold.selscore.R
\name{threshold.selscore}
\alias{threshold.selscore}
\title{Selection probabilities of the regularization model using the elastic-net penalty with multiresponse gaussian family (MNET).}
\usage{
threshold.selscore(
  params,
  nperm = 100,
  seed = 1,
  perm.type = c("row-wise", "col-wise")
)
}
\arguments{
\item{params}{The parameters used in \code{main} function. If you already run the \code{main} function, it then provides the list of params.}

\item{nperm}{The number of permutation replicates. Default is 100.}

\item{seed}{An integer value for reproducible outcome. Default is 1 that does not have special meaning.}
}
\value{
A data.frame with each column representing the selection probability for each phenotype
}
\description{
The penalized regression model using elastic-net penalty with multiresponse gaussian family (MNET) aims to solve the following problem:
\deqn{ \frac{1}{2} \| Y - X \beta \|_F^2 +  \lambda [ \frac{1-\alpha}{2} ||\beta||_F^2 + \alpha \sum_{j=1}^p ||\beta_j||_2 ]}
}
\examples{
# library(mnormt)
library(glmnet)
library(dplyr)

for( i in list.files("./R") \%>\% {.[!.\%in\%"unet-package.R"]} ){
  source(paste0("./R/", i))
}

set.seed(1)
n=100; p=1000; q=4

X <- replicate(p, rbinom(n,2,0.2)) #generate the SNP X=0,1,2
b <- matrix(0, p, q)
b[1:5,1:4] <- 1.0
b[6:10,1:2] <- 1.0


Z <- replicate(1, rnorm(n))
g <- matrix(0, 1, q)
g[1,1:4] <- 0.1

x <- cbind(Z, X)
beta <- rbind(g, b)

y <- x\%*\%beta + replicate(q, rnorm(n,1))
y[,2:3] <- apply(y[,2:3], 2, function(yk) ifelse(yk > median(yk), 1, 0) )
Family<-c("gaussian","binomial","binomial","gaussian")
alpha.vec <- 0.1
penalty.factor <- c(0, rep(1, p))

lambda.vec.enet <- grid.lambda(x = x, y = y,
                               family = Family,
                               method = "enet",
                               iter = 10,
                               seq.alpha = 0.1, n.lambda = 10,
                               penalty.factor=penalty.factor) \%>\%
  lapply( function(x) seq(median(x), max(x), length.out=10) )


selscore <- SelectionScore(x, y, Family, seq.alpha = 0.1, seq.lambda = lambda.vec.enet, delta = 1, K = 100, psub = 1.0, penalty.factor = penalty.factor, verbose = TRUE)

# selscore$sp$TotalScore$score \%>\% apply(1, max) \%>\% head
# selscore$sp$IndScore \%>\% apply(c(1,3), max) \%>\% head

# params = selscore$params
# nperm = 100
# seed = 1

#



set.seed(1)
res.threshold <- threshold.selscore(selscore$params, nperm=20, perm.type = "both")
res.PostHoc <- selscore.PostHoc( selscore, res.threshold )

library(dplyr)
FD = 10
with( res.PostHoc, selected[,,FD] \%>\% head )
with( res.PostHoc, selected[,,FD][selected[,"comp.total",FD]==1,] \%>\% head )
with( res.PostHoc, selected[,,FD][selected[,"sep.total",FD]==1,] \%>\% head )
with( res.PostHoc, res.PostHoc$TotalScore )

df.PostHoc.SepTotal <- with( res.PostHoc, cbind(selected[,,FD], TotalScore=res.PostHoc$TotalScore)[selected[,"sep.total",FD]==1,] )
df.PostHoc.CompTotal <- with( res.PostHoc, cbind(selected[,,FD], TotalScore=res.PostHoc$TotalScore)[selected[,"comp.total",FD]==1,] )

df.PostHoc.SepTotal[ order(df.PostHoc.SepTotal[,"TotalScore"], decreasing=TRUE), ]
df.PostHoc.CompTotal[ order(df.PostHoc.CompTotal[,"TotalScore"], decreasing=TRUE), ]



}
\references{
Zou, H., & Hastie, T. (2005). Regularization and variable selection via the elastic net. Journal of the royal statistical society: series B (statistical methodology), 67(2), 301-320.
Meinshausen, N., & BÃ¼hlmann, P. (2010). Stability selection. Journal of the Royal Statistical Society: Series B (Statistical Methodology), 72(4), 417-473.
Simon, N., Friedman, J., & Hastie, T. (2013). A blockwise descent algorithm for group-penalized multiresponse and multinomial regression. arXiv preprint arXiv:1311.6529.
Kim, K., Koo, J., & Sun, H. (2020). An empirical threshold of selection probability for analysis of high-dimensional correlated data. Journal of Statistical Computation and Simulation, 1-12.
}
\author{
Kipoong Kim \href{mailto:kkp7700@gmail.com}{kkp7700@gmail.com}
}
